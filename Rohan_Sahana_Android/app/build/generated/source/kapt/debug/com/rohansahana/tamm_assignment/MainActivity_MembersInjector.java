// Generated by Dagger (https://dagger.dev).
package com.rohansahana.tamm_assignment;

import com.rohansahana.tamm_assignment.viewmodels.MainViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<MainViewModelFactory> mainViewModelFactoryProvider;

  public MainActivity_MembersInjector(Provider<MainViewModelFactory> mainViewModelFactoryProvider) {
    this.mainViewModelFactoryProvider = mainViewModelFactoryProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<MainViewModelFactory> mainViewModelFactoryProvider) {
    return new MainActivity_MembersInjector(mainViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectMainViewModelFactory(instance, mainViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.rohansahana.tamm_assignment.MainActivity.mainViewModelFactory")
  public static void injectMainViewModelFactory(MainActivity instance,
      MainViewModelFactory mainViewModelFactory) {
    instance.mainViewModelFactory = mainViewModelFactory;
  }
}
