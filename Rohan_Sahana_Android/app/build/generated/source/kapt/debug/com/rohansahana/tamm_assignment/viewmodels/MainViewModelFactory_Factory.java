// Generated by Dagger (https://dagger.dev).
package com.rohansahana.tamm_assignment.viewmodels;

import androidx.lifecycle.ViewModel;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import java.util.Map;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class MainViewModelFactory_Factory implements Factory<MainViewModelFactory> {
  private final Provider<Map<Class<?>, ViewModel>> mapProvider;

  public MainViewModelFactory_Factory(Provider<Map<Class<?>, ViewModel>> mapProvider) {
    this.mapProvider = mapProvider;
  }

  @Override
  public MainViewModelFactory get() {
    return newInstance(mapProvider.get());
  }

  public static MainViewModelFactory_Factory create(
      Provider<Map<Class<?>, ViewModel>> mapProvider) {
    return new MainViewModelFactory_Factory(mapProvider);
  }

  public static MainViewModelFactory newInstance(Map<Class<?>, ViewModel> map) {
    return new MainViewModelFactory(map);
  }
}
